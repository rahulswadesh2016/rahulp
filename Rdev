 
using System;
using System.Collections.Generic;
using System.Data;
using System.Data.SqlClient;
using System.Linq;
using System.Reflection;
using System.Text;
using System.Threading.Tasks;
using System.Web.Mvc;
using System.Web.Script.Serialization;

public class Rdev
{
    cusfun cfun=new cusfun();

   
    public void connect(string con)
    {
        cfun.Con = con;
    }
    public SelectList ToSelect(DataTable table, string valueField, string textField)
    {
        List<SelectListItem> list = new List<SelectListItem>();

        list.Add(new SelectListItem { Text = "Select", Value = "" });
        if (table.Rows.Count > 0)
        {
            foreach (DataRow row in table.Rows)
            {
                list.Add(new SelectListItem()
                {
                    Text = row[textField].ToString(),
                    Value = row[valueField].ToString()
                });
            }
        }

        return new SelectList(list, "Value", "Text");
    }

    public string ToJSON(DataTable table)
    {
        JavaScriptSerializer jsSerializer = new JavaScriptSerializer();
        List<Dictionary<string, object>> parentRow = new List<Dictionary<string, object>>();
        Dictionary<string, object> childRow;
        foreach (DataRow row in table.Rows)
        {
            childRow = new Dictionary<string, object>();
            foreach (DataColumn col in table.Columns)
            {
                childRow.Add(col.ColumnName, row[col]);
            }
            parentRow.Add(childRow);
        }
        return jsSerializer.Serialize(parentRow);
    }

    public T ToView<T>(DataRow row) where T : new()
    {
        // create a new object
        T item = new T();

        // set the item
        cfun.SetItemFromRow(item, row);

        // return 
        return item;
    }

   

    public DataSet FETCH_MASTER(string Condition1, string Condition2, string Condition3
        , string Condition4, string Condition5, string Condition6, string Condition7,
        string Condition8, string Condition9, string Condition10
        , string OnTable)
    {
        DataSet ds = new DataSet();
        Property p = new Property();
        p.Condition1 = Condition1;
        p.Condition2 = Condition2;
        p.Condition3 = Condition3;
        p.Condition4 = Condition4;
        p.Condition5 = Condition5;
        p.Condition6 = Condition6;
        p.Condition7 = Condition7;
        p.Condition8 = Condition8;
        p.Condition9 = Condition9;
        p.Condition10 = Condition10;
        p.OnTable = OnTable;
        ds = cfun.DS_FETCH_MASTER(p);
        return ds;
    }

   

    public class Property
    {
        public string Condition1 { get; set; }
        public string Condition2 { get; set; }
        public string Condition3 { get; set; }
        public string Condition4 { get; set; }
        public string Condition5 { get; set; }
        public string Condition6 { get; set; }
        public string Condition7 { get; set; }
        public string Condition8 { get; set; }
        public string Condition9 { get; set; }
        public string Condition10 { get; set; }
        public string OnTable { get; set; }
    }


  

}

